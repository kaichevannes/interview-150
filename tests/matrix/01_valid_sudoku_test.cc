#include "../../src/matrix/01_valid_sudoku.h"
#include <gtest/gtest.h>

class ValidSudokuTest : public testing::Test {
protected:
  ValidSudoku validSudoku;
  std::vector<std::vector<char>> board;
};

TEST_F(ValidSudokuTest, EmptyBoard) {
  board = {
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
  };
  EXPECT_TRUE(validSudoku.isValidSudoku(board));
};

TEST_F(ValidSudokuTest, DiagonalBoard) {
  board = {
      {'1', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '2', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '3', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '4', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '5', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '6', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '7', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '8', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '9'},
  };
  EXPECT_TRUE(validSudoku.isValidSudoku(board));
}

TEST_F(ValidSudokuTest, InvalidRow) {
  board = {
      {'1', '.', '.', '1', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
  };
  EXPECT_FALSE(validSudoku.isValidSudoku(board));
}

TEST_F(ValidSudokuTest, MultipleInvalidRows) {
  board = {
      {'1', '.', '.', '1', '.', '.', '1', '.', '.'},
      {'.', '2', '2', '.', '2', '.', '.', '2', '.'},
      {'3', '3', '3', '.', '.', '3', '3', '.', '.'},
      {'.', '4', '.', '.', '.', '.', '.', '.', '4'},
      {'5', '.', '.', '.', '5', '.', '.', '.', '5'},
      {'.', '.', '.', '.', '.', '.', '6', '6', '.'},
      {'.', '.', '7', '7', '.', '.', '7', '7', '.'},
      {'8', '.', '.', '.', '.', '.', '.', '.', '8'},
      {'9', '9', '9', '9', '9', '9', '9', '9', '9'},
  };
  EXPECT_FALSE(validSudoku.isValidSudoku(board));
}

TEST_F(ValidSudokuTest, InvalidColumn) {
  board = {
      {'1', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'1', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
  };
  EXPECT_FALSE(validSudoku.isValidSudoku(board));
}

TEST_F(ValidSudokuTest, MultipleInvalidColumns) {
  board = {
      {'1', '2', '.', '4', '.', '6', '7', '.', '9'},
      {'.', '2', '3', '.', '5', '.', '.', '8', '9'},
      {'.', '.', '3', '4', '.', '.', '.', '8', '9'},
      {'1', '.', '3', '.', '.', '6', '.', '8', '9'},
      {'.', '.', '.', '.', '5', '.', '.', '8', '9'},
      {'.', '2', '3', '4', '5', '.', '.', '8', '9'},
      {'1', '.', '.', '4', '.', '.', '.', '8', '9'},
      {'.', '.', '.', '.', '.', '.', '.', '8', '9'},
      {'.', '2', '3', '4', '5', '6', '7', '.', '9'},
  };
  EXPECT_FALSE(validSudoku.isValidSudoku(board));
}

TEST_F(ValidSudokuTest, InvalidSubBox) {
  board = {
      {'.', '.', '.', '.', '.', '.', '.', '1', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '1'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '.', '.', '.', '.'},
  };
  EXPECT_FALSE(validSudoku.isValidSudoku(board));
}

TEST_F(ValidSudokuTest, MultipleInvalidSubBoxes) {
  board = {
      {'1', '.', '.', '1', '2', '3', '8', '.', '.'},
      {'.', '1', '.', '3', '.', '.', '7', '8', '.'},
      {'.', '.', '1', '.', '.', '.', '.', '.', '.'},
      {'2', '4', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '3', '.', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '4', '.', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '6', '.', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '6', '.', '.', '.', '.'},
      {'.', '.', '.', '.', '.', '6', '.', '.', '.'},
  };
  EXPECT_FALSE(validSudoku.isValidSudoku(board));
}

TEST_F(ValidSudokuTest, ValidSudoku) {
  board = {
      {'5', '3', '.', '.', '7', '.', '.', '.', '.'},
      {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
      {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
      {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
      {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
      {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
      {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
      {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
      {'.', '.', '.', '.', '8', '.', '.', '7', '9'},
  };
  EXPECT_TRUE(validSudoku.isValidSudoku(board));
}
